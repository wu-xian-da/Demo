<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jianfei.d.dao.system.UserDao">

	<sql id="userColumns">
		a.id,
		a.name,
		a.loginName,
		a.tel,
		a.password,
		a.salt,
		a.status,
		a.createDate,
		a.role_id AS "role.id",
		a.department_id AS "department.id"
	</sql>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO t_user(
			name,
			loginName,
			tel,
			password,
			salt,
			status,
			role_id,
			department_id,
			createDate
		) VALUES (
			#{name},
			#{loginName},
			#{tel},
			#{password},
			#{salt},
			#{status},
			#{role.id},
			#{department.id},
			#{createDate}
		)
	</insert>

	<update id="update">
		UPDATE t_user SET
		name=#{name},
		loginName=#{loginName},
		tel=#{tel},
		status=#{status},
		role_id=#{role.id},
		department_id=#{department.id}
		WHERE id=#{id}
	</update>

	<update id="initPasswordBatch" parameterType="java.util.List">
		<foreach collection="list" item="user" index="index" separator=";">
            UPDATE t_user  
            <set>  
              password = #{user.password},
              salt=#{user.salt}
            </set>
            WHERE id = #{user.id}
         </foreach>
	</update>
	
	<update id="updateUserStatusBatch" parameterType="java.util.List">
		<foreach collection="list" item="user" index="index" separator=";">
            UPDATE t_user
            <set>  
              status = #{user.status}
            </set>
            WHERE id = #{user.id}
         </foreach>
	</update>
	
	<update id="modifyPassword">
		UPDATE t_user  
        <set>  
          password = #{password}, salt=#{salt}
        </set>
        WHERE id = #{id}
	</update>
	
	<delete id="delete">
		DELETE FROM t_user WHERE id=#{id}
	</delete>

	<select id="get" resultType="User">
		SELECT
		<include refid="userColumns" />
		FROM t_user a
		WHERE a.id = #{id}
	</select>
	
	<select id="findByLoginName" resultType="User">
		SELECT
		<include refid="userColumns" />
		FROM t_user a
		WHERE a.loginName = #{loginName}
	</select>
	
	<select id="findPage" resultType="User">
		SELECT
		<include refid="userColumns" />,
		b.name AS "role.name",
		c.name AS "department.name"
		FROM t_user a
		LEFT JOIN t_role b ON a.role_id=b.id
		LEFT JOIN t_department c ON a.department_id=c.id
		<where>
			<if test="loginName != null and loginName != ''">
				a.loginName like CONCAT('%',#{loginName},'%') 
			</if>
			<if test="role != null and role.id != null">
				AND a.role_id=#{role.id}
			</if>
			<if test="departments != null and departments.size() > 0">
				AND a.department_id IN
				<foreach collection="departments" item="dId" open="(" separator="," close=")"> 
					#{dId}
				</foreach>
			</if>
		</where>
		ORDER BY a.id DESC
	</select>

</mapper>